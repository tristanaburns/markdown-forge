version: '3.8'

services:
  # PostgreSQL database service
  postgres:
    image: postgres:15
    container_name: markdown-forge-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=markdown_forge
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend service (FastAPI)
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: markdown-forge-backend
    command: python -m uvicorn backend.main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./:/app
      - ./backend/data:/app/backend/data
      - ./backend/logs:/app/backend/logs
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=markdown_forge
      - MARKDOWN_FORGE_ENV=production
      - SECRET_KEY=changeme_in_production
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Frontend service (Flask)
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: markdown-forge-frontend
    command: python -m flask --app app/main.py run --host 0.0.0.0 --port 5000
    volumes:
      - ./:/app
      - ./app/static/uploads:/app/app/static/uploads
      - ./app/static/converted:/app/app/static/converted
      - ./app/logs:/app/app/logs
    environment:
      - FLASK_APP=app/main.py
      - FLASK_ENV=production
      - API_BASE_URL=http://backend:8000
      - SECRET_KEY=changeme_in_production
    ports:
      - "5000:5000"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  markdown_data:
    name: markdown_forge_data
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data  # Mount from local directory 